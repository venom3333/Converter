using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Text.RegularExpressions;
using ConvertorForSOI.SQLs;

namespace ConvertorForSOI
{
    // Класс для объектов "Инициатор розыска" (NAK_WANTEDINITIATOR).
    public class WantedInitiator : Parse.Dictionaries
    {
        // Список ведомств, добавлять по количеству символов (чем важнее (более обобщенные) - тем выше) , ФСБ должна быть под индексом 0!
        // private static List<string> departments = new List<string>();
        /*
        private static List<string> departments = new List<string> {
            "ФСБ",
            "ГУВД",
            "УТ МВД",
            "ГУ МВД",
            "ГУИН МЮ",
            "УВДТ",
            "МВД",
            "ФТС",
            "УМВД",
            "ГУФСИН",
            "УФСИН",
            "УВД",
            "КНБ",
            "ДКНБ",
            "МЮ",
        };
        */

        // Карта соответствий ключевых слов в источнике, названиям типа розыска в базе данных nak_data.nak_wantedinitiator.
        // Если ключевое слово присутствует в строке источника,то по этому ключевому слову подставляется значение из карты.

        /*
        private static Dictionary<string, string> WantedInitiatorMap = new Dictionary<string, string>()
        {
            {"кыргыз", "Кыргызской Республики"},
            {"чеченск", "По Чеченской республике"},
            {"таджик", "Республики Таджикистан"},
            {"СОГДИЙСК", "СОГДИЙСКОЙ ОБЛАСТИ"},
            {"ХАТЛОНСК", "ХАТЛОНСКОЙ ОБЛАСТИ"},
            {"РАШТСК", "ПО РАШТСКОЙ ГРУППЕ РАЙОНОВ"},
            {"ГОРНО-БАДАХШАНСК", "ГОРНО-БАДАХШАНСКОЙ АВТОНОМНОЙ ОБЛАСТИ"},
            {"ЮЖНО-КАЗАХСТАНСК", "ЮЖНО-КАЗАХСТАНСКОЙ ОБЛАСТИ"},
            {"ЗАПАДНО-КАЗАХСТАНСК", "ЗАПАДНО-КАЗАХСТАНСКОЙ ОБЛАСТИ"},
            {"СЕВЕРО-КАЗАХСТАНСК", "СЕВЕРО-КАЗАХСТАНСКОЙ ОБЛАСТИ"},
            {"ЧУЙСК", "ЧУЙСКОЙ ОБЛАСТИ"},
            {"ХОРЕЗМСК", "ХОРЕЗМСКОЙ ОБЛ."},
            {"ФЕРГАНСК", "ФЕРГАНСКОЙ ОБЛ."},
            {"ТАШКЕНТСК", "ТАШКЕНТСКОЙ ОБЛАСТИ"},
            {"СУРХАНДАРЬИНСК", "СУРХАНДАРЬИНСКОЙ ОБЛАСТИ"},
            {"САМАРКАНДСК", "САМАРКАНДСКОЙ ОБЛ"},
            {"ПАВЛОДАРСК", "ПАВЛОДАРСКОЙ ОБЛАСТИ"},
            {"ОШСК", "Ошской области"},
            {"НАМАНГАНСК", "Наманганской обл."},
            {"МАНГИСТАУСК", "МАНГИСТАУСКОЙ ОБЛАСТИ"},
            {"ЛЕБАПСК", "ЛЕБАПСКОЙ ОБЛАСТИ"},
            {"КАШКАДАРЬИНСК", "Кашкадарьинской области"},
            {"ИССЫК-КУЛЬСК", "ИССЫК-КУЛЬСКОЙ ОБЛАСТИ"},
            {"ЖАМБЫЛСК", "ЖАМБЫЛСКОЙ ОБЛАСТИ"},
            {"ДЖАЛАЛ-АБАДСК", "ДЖАЛАЛ-АБАДСКОЙ ОБЛ"},
            {"ВОСТОЧНО-КАЗАХСТАНСК", "ВОСТОЧНО-КАЗАХСТАНСКОЙ ОБЛАСТИ"},
            {"БАЛКАНСК", "БАЛКАНСКОЙ ОБЛАСТИ"},
            {"АНДИЖАНСК", "АНДИЖАНСКОЙ ОБЛАСТИ"},
            {"БУХАРСК", "БУХАРСКОЙ ОБЛАСТИ"},
            {"АКМОЛИНСК", "АКМОЛИНСКОЙ ОБЛАСТИ"},
            {"ТУРКМЕН", "ТУРКМЕНИСТАНА"},
            {"ДАГЕСТАН", "ПО РЕСПУБЛИКЕ ДАГЕСТАН"},
            {"РЕСПУБЛИКИ КАЗАХСТАН", "РЕСПУБЛИКИ КАЗАХСТАН"},
            {"КОСТАНАЙСК", "КОСТАНАЙСКОЙ ОБЛАСТИ"},
            {"Г.АЛМАТЫ", "Г.АЛМАТЫ"},
            {"Г.АСТАНА", "Г.АСТАНА"},
            {"Г.ТАШКЕНТ", "г. Ташкента"},
            {"Г.МОСКВ", "ПО Г.МОСКВЕ"},
            {"АЛТАЙСКОМУ", "ПО АЛТАЙСКОМУ КР."},
            {"ВОЛГОГРАДСК", "ПО ВОЛГОГРАДСКОЙ ОБЛ."},
            {"ВОРОНЕЖСК", "ПО ВОРОНЕЖСКОЙ ОБЛ."},
            {"ПЕТЕРБУРГ", "ПО Г.С.-ПЕТЕРБУРГУ И ЛЕНИНГРАДСКОЙ О"},
            {"ИРКУТСКО", "ПО ИРКУТСКОЙ ОБЛ."},
            {"КЕМЕРОВСКО", "ПО КЕМЕРОВСКОЙ ОБЛ."},
            {"КРАСНОДАРСК", "ПО КРАСНОДАРСКОМУ КР."},
            {"КРАСНОЯРСК", "ПО КРАСНОЯРСКОМУ КР."},
            {"МОСКОВСКО", "ПО МОСКОВСКОЙ ОБЛ."},
            {"НИЖЕГОРОДСК", "ПО НИЖЕГОРОДСКОЙ ОБЛ."},
            {"НОВОСИБИРСКО", "ПО НОВОСИБИРСКОЙ ОБЛ."},
            {"ПЕРМСКО", "ПО ПЕРМСКОМУ КР."},
            {"РОСТОВСК", "ПО РОСТОВСКОЙ ОБЛ."},
            {"САМАРСК", "ПО САМАРСКОЙ ОБЛ."},
            {"САРАТОВСК", "ПО САРАТОВСКОЙ ОБЛ."},
            {"СВЕРДЛОВСКО", "ПО СВЕРДЛОВСКОЙ ОБЛ."},
            {"СТАВРОПОЛЬСК", "России по Ставропольскому краю "},
            {"ЯМАЛО-НЕНЕЦК", "ПО ЯМАЛО-НЕНЕЦКОМУ А.О."},
            {"КАБАРДИНО-БАЛКАРСК", "Кабардино-Балкарской Республики"},
            {"КАРАЧАЕВО-ЧЕРКЕССК", "Карачаево-Черкесской Республики"},
            {"АЛТАЙ", "ПО АЛТАЙСКОМУ КР."},
            {"БАШКОРТОСТАН", "ПО РЕСПУБЛИКЕ БАШКОРТОСТАН"},
            {"БУРЯТ", "ПО РЕСПУБЛИКЕ БУРЯТИЯ"},
            {"ИНГУШ", "Ингушской Республики"},
            {"КАЛМЫК", "ПО РЕСПУБЛИКЕ КАЛМЫКИЯ"},
            {"КАРЕЛ", "ПО РЕСПУБЛИКЕ КАРЕЛИЯ"},
            {"РЕСПУБЛИКА КОМИ", "ПО РЕСПУБЛИКЕ КОМИ"},
            {"РЕСПУБЛИКЕ КОМИ", "ПО РЕСПУБЛИКЕ КОМИ"},
            {"КРЫМ", "ПО РЕСПУБЛИКЕ КРЫМ"},
            {"МАРИЙ ЭЛ", "ПО РЕСПУБЛИКЕ МАРИЙ ЭЛ"},
            {"МОРДОВ", "ПО РЕСПУБЛИКЕ МОРДОВИЯ"},
            {"СЕВЕРНАЯ ОСЕТ", "Республики Северная Осетия-Алания"},
            {"ТАТАРС", "Республики Татарстан"},
            {"ТЫВА", "ПО РЕСПУБЛИКЕ ТЫВА"},
            {"УДМУРТ", "ПО УДМУРТСКОЙ РЕСПУБЛИКЕ"},
            {"ЧУВАШ", "Чувашской Республики"},
            {"АМУРСК", "ПО АМУРСКОЙ ОБЛ."},
            {"АРХАНГЕЛЬСКО", "ПО АРХАНГЕЛЬСКОЙ ОБЛ."},
            {"АСТРАХАНСК", "Астраханской обл."},
            {"БЕЛГОРОДСК", "Белгородской обл."},
            {"БРЯНСКО", "ПО БРЯНСКОЙ ОБЛ."},
            {"ВЛАДИМИРСК", "Владимирской обл."},
            {"ВОЛОГОДСК", "ПО ВОЛОГОДСКОЙ ОБЛ."},
            {"СЕВАСТОПОЛ", "ПО Г.СЕВАСТОПОЛЮ"},
            {"ЗАБАЙКАЛЬСК", "ПО ЗАБАЙКАЛЬСКОМУ КР."},
            {"ИВАНОВСК", "ПО ИВАНОВСКОЙ ОБЛ."},
            {"КАЛИНИНГРАД", "ПО КАЛИНИНГРАДСКОЙ ОБЛ."},
            {"КАЛУЖСК", "КАЛУЖСКОЙ ОБЛ."},
            {"КИРОВ", "ПО КИРОВСКОЙ ОБЛ."},
            {"КОСТРОМ", "ПО КОСТРОМСКОЙ ОБЛ."},
            {"КУРГАН", "ПО КУРГАНСКОЙ ОБЛ."},
            {"МУРМАНСК", "ПО МУРМАНСКОЙ ОБЛ."},
            {"НОВГОРОДС", "ПО НОВГОРОДСКОЙ ОБЛ."},
            {"ТОМСК", "ПО ТОМСКОЙ ОБЛ."},
            {"ХАКАС", "ПО РЕСПУБЛИКЕ ХАКАСИЯ"},
            {"ОМСК", "ПО ОМСКОЙ ОБЛ."},
            {"ОРЕНБУРГ", "ОРЕНБУРГСКОЙ ОБЛ."},
            {"ОРЛОВСК", "Орловской обл."},
            {"ПРИМОРСК", "ПРИМОРСКОГО КР."},
            {"ПСКОВ", "Псковской обл."},
            {"РЯЗАН", "Рязанской обл."},
            {"САХАЛИН", "САХАЛИНСКОЙ ОБЛ."},
            {"ТАМБОВ", "ТАМБОВСКОЙ ОБЛ."},
            {"ТВЕРСК", "ТВЕРСКОЙ ОБЛ"},
            {"ТВЕРЬ", "ТВЕРСКОЙ ОБЛ"},
            {"ТУЛЬСК", "ПО ТУЛЬСКОЙ ОБЛ."},
            {"ТЮМЕН", "ТЮМЕНСКОЙ ОБЛ"},
            {"УЛЬЯНОВСК", "Ульяновской обл."},
            {"ХАБАРОВСК", "Хабаровского Края"},
            {"ХАНТЫ-МАНСИЙСК", "ПО ХАНТЫ-МАНСИЙСКОМУ А.О.-ЮГРЕ"},
            {"ЯРОСЛАВ", "Ярославской обл."},
            {"ЧЕЛЯБ", "ПО ЧЕЛЯБИНСКОЙ ОБЛ."},
            {"КАМЧАТ", "ПО КАМЧАТСКОМУ КР."},
            {"БИШКЕК", "г. Бишкек"},
            {"МИНСКОЙ", "МИНСКОЙ ОБЛ."},
            {"МИНСК", "г. Минска"},
            {"БЕЛАРУС", "РЕСПУБЛИКИ БЕЛАРУСЬ"},
            {"АКТЮБИНСК", "ПО АКТЮБИНСКОЙ ОБЛ."},
            {"КАРАГАНД", "КАРАГАНДИНСКОЙ ОБЛ."},
            {"ПФО", "ПО ПФО"},
            {"СФО", "ПО СФО"},
            {"УФО", "ПО УФО"},
            {"ЦФО", "ПО ЦФО"},
            {"СКФО", "ПО СКФО"},
            {"РОССИИ", "РОССИИ"},
            {"СССР", "СССР"},
            {"АЗЕРБАЙДЖАН", "АЗЕРБАЙДЖАНСКОЙ РЕСПУБЛИКИ"},
            {"ГРУЗИ", "РЕСПУБЛИКИ ГРУЗИЯ"},
            {"КАРАКАЛП", "РЕСПУБЛИКИ КАРАКАЛПАКСТАН"},
            {"МОЛДОВ", "РЕСПУБЛИКИ МОЛДОВА"},
            {"АЛМАТИН", "АЛМАТИНСКОЙ ОБЛ."},
            {"БАТКЕНСК", "БАТКЕНСКОЙ ОБЛ."},
            {"БРЕСТ", "БРЕСТСКОЙ ОБЛ."},
            {"ВИТЕБСК", "ВИТЕБСКОЙ ОБЛ."},
            {"ГОМЕЛЬ", "ГОМЕЛЬСКОЙ ОБЛ."},
            {"ГРОДНЕН", "ГРОДНЕНСКОЙ ОБЛ."},
            {"ДЖИЗАКС", "ДЖИЗАКСКОЙ ОБЛ."},
            {"КЫЗЫЛОРД", "КЫЗЫЛОРДИНСКОЙ ОБЛ."},
            {"ЛЕНИНАБАД", "ЛЕНИНАБАДСКОЙ ОБЛ."},
            {"АТЫРАУСК", "АТЫРАУСКОЙ ОБЛ."},
            {"МОГИЛЕВСК", "МОГИЛЕВСКОЙ ОБЛ."},
            {"НАВОИЙСК", "НАВОИЙСКОЙ ОБЛ."},
            {"СЫРДАРЬ", "СЫРДАРЬИНСКОЙ ОБЛ."},
            {"ЮГО-ОСЕТИН", "ЮГО-ОСЕТИНСКОЙ А.О."},
            {"УЗБЕК", "РЕСПУБЛИКИ УЗБЕКИСТАН"},
        };
        */
        /// <summary>
        /// Метод возвращает коллекцию строк с инициаторами розыска и, при необходимости, заполняет список ненайденных в словаре программы и БД..
        /// </summary>
        /// <param name="source">Строка источник информации.</param>
        /// <returns>Масссив строк, где каждая строка это тип розыска. В случае неудачи возвращаем пустой массив.</returns>
        public static string GetWantedInitiator(string source)
        {
            string wantedInitiator = string.Empty;
            // Найдем ведомство (индекс и наименование)
            int deptIdx = -1;


            // Если инициатор неизвестен, то МВД России
            if (String.IsNullOrEmpty(source) || String.IsNullOrWhiteSpace(source))
            {
                wantedInitiator = "МВД России";
            }
            else
            {

                for (int i = 0; i < departments.Count; i++)
                {
                    string pattern = "(^| )(" + departments[i] + ")(&| )"; // потому что \b не работает с кириллицей
                    if (Regex.IsMatch(source, pattern, RegexOptions.IgnoreCase | RegexOptions.ECMAScript) || source.ToUpper().Contains("ФСБ"))
                    {
                        deptIdx = i;
                        break;
                    }
                }

                switch (deptIdx)
                {
                    // если не найдено ведомство (-1), обозначим это при добавлении в список.
                    case -1:
                        ParseHelper.missedWantedInitiators.Add("!ВЕДОМСТВО! " + source);
                        break;
                    // ФСБ России
                    case 0:
                        wantedInitiator = "ФСБ России";
                        break;
                    // в остальных случаях
                    default:
                        try
                        {
                            wantedInitiator = wantedInitiators.Where(g => source.ToLower().Contains(g.Key.ToLower())).Select(g => g.Value).ToArray()[0];
                            // Добавляем ведомство
                            wantedInitiator = departments[deptIdx] + " " + wantedInitiator;
                        }
                        catch
                        {
                            // Пишем строки в которых не нашли соответствия с инициаторами розыска из WantedInitiatorMap
                            if (ParseHelper.missedWantedInitiators.IndexOf(source) == -1)
                            {
                                ParseHelper.missedWantedInitiators.Add(source);
                            }
                        }
                        break;
                }
            }
            /// Проверяем есть ли такой инициатор розыска в БД (NAK_WANTEDINITIATOR)
            // есть ли имя вообще в переменной
            if (!String.IsNullOrEmpty(wantedInitiator))
            {

                // если до этого не добавляли в список, добавить
                if (ParseHelper.missedWantedInitiatorsDB.IndexOf(wantedInitiator) == -1)
                {
                    // проверка в БД
                    if (!WantedSQL.InitiatorExists(wantedInitiator))
                    {
                        ParseHelper.missedWantedInitiatorsDB.Add(wantedInitiator);
                    }
                }
            }
            return wantedInitiator;
        }

    }
}